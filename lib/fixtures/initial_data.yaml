# Initial data for the database.  These are special data that must be in
# the database for certain operations to work.
#
# Since this fixture is named initial_data.<ext>, this fixture will be
# automatically loaded on syncdb.

# These pks must match the ones in settings.py:
# IMPORTED_USER_ID, ROBOT_USER_ID, ALLEVIATE_USER_ID.
- model: auth.user
  pk: -2
  fields:
    username: Imported
- model: auth.user
  pk: -3
  fields:
    username: robot
- model: auth.user
  pk: -4
  fields:
    username: Alleviate

# This pk must:
# - Match the LabelSet model's EMPTY_LABELSET_ID
# - Match the labelset id of all empty-labelset sources in all fixtures
# - NOT match the pk of any other labelset in the fixtures
#
# Unfortunately:
# - Our existing database(s) have this pk as -1.
# - If this pk is 0 or negative, running tests with PostgreSQL results in an
#   'out of bounds for sequence' error when creating the database.
#
# The workaround for now is:
# - Typically run tests with SQLite.
# - When we want to test in PostgreSQL, we can temporarily change this pk
#   (and everything it must match) to something else, then change it back.
#
# TODO: Two options for a fix:
# (A) Change this to a positive pk that'll probably never be reached,
#     like 999999999, and data-migrate the existing database(s) to
#     use that pk for the empty labelset.
# (B) (Preferred) Phase out the empty labelset. When a new source is created,
#     and the user hasn't specified their labelset yet, set the labelset
#     as NULL instead of setting it as the empty labelset.
#     Since we use PostgreSQL now, not MySQL, we shouldn't be scared of
#     stuff like foreign keys being allowed a NULL value.
- model: annotations.labelset
  pk: -1
  fields:
    description: Empty labelset. A dummy labelset for new sources.
    edit_date: "2011-10-22T14:56:23+00:00"