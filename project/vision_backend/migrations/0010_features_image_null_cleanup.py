# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2021-03-24 09:04
from __future__ import unicode_literals

from django.db import migrations


def delete_features_with_no_image(apps, schema_editor):
    """
    Delete features which don't have an image (and say how many
    such features there are before deleting). This allows us to subsequently
    set the Features.image field to be non-null.

    Having a Features without an associated Image is an error case, and
    renders us unable to use the Features for anything. So we can delete them.
    """
    Features = apps.get_model('vision_backend', 'Features')
    features_with_no_image = Features.objects.filter(image__isnull=True)
    count = features_with_no_image.count()

    # Only prompt if there are Features to delete. This way, the migration
    # won't bring up a prompt when initializing unit tests.
    if count > 0:
        input_text = input(
            f"Detected {count} Features objects without corresponding Images."
            f" These Features will be deleted now. OK? [y/N]: "
        )
        if input_text.lower() != 'y':
            raise Exception("Migration aborted.")

        features_with_no_image.delete()
        print("Deleted those Features.")


class Migration(migrations.Migration):

    dependencies = [
        ('vision_backend', '0009_rename_features_image'),
    ]

    operations = [
        migrations.RunPython(
            delete_features_with_no_image, migrations.RunPython.noop,
            elidable=True,
        ),
    ]
