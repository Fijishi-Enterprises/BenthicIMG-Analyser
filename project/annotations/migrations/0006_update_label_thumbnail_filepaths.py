# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-05-31 19:28
from __future__ import unicode_literals
import posixpath
from django.db import migrations


def update_label_thumbnail_filepaths(apps, schema_editor):
    old_dir = 'label_thumbnails/'
    new_dir = 'labels/'
    # Note: This migration will NOT move the thumbnail files themselves
    # because implementing this robustly can be a bit complicated,
    # and it's simple to just manually move the files from one directory
    # to the other.
    # If you're not setting up a new development machine, make sure
    # that you've moved your thumbnail files from the old directory
    # to the new directory.
    # (If you haven't moved them yet, do it later.)

    Label = apps.get_model('annotations', 'Label')
    labels = Label.objects.all()
    label_count = labels.count()

    for num, label in enumerate(labels, 1):
        old_filepath = label.thumbnail.name
        filename = posixpath.split(old_filepath)[1]
        new_filepath = posixpath.join(new_dir, filename)

        # Update the filepath in the DB.
        # Since we have to craft a different filepath for each label,
        # there seems to be no way to do a bulk save/update.
        # http://stackoverflow.com/a/12661327
        label.thumbnail.name = new_filepath
        label.save()

        # Give progress updates every so often.
        if num % 100 == 0:
            print("Updated {num} of {count} filepaths...".format(
                num=num, count=label_count))


def dont_rollback_filepaths(apps, schema_editor):
    print("\nNo action taken in this migration rollback."
          " If any filepaths in your Label objects were already updated,"
          " those filepaths will just be re-written with the same values"
          " when you re-run this migration.")


class Migration(migrations.Migration):

    dependencies = [
        ('annotations', '0005_remove_empty_labelset'),
    ]

    operations = [
        migrations.RunPython(
            update_label_thumbnail_filepaths, dont_rollback_filepaths,
            elidable=True),
    ]
