from six.moves import collections_abc

from rest_framework.renderers import JSONRenderer


class JSONAPIRenderer(JSONRenderer):

    def render(self, data, accepted_media_type=None, renderer_context=None):

        # See whether we're dealing with an error response or not.
        # The logic to detect this is based on django-rest-framework-json-api.
        if renderer_context:
            view = renderer_context.get('view')
            try:
                code = str(view.response.status_code)
            except (AttributeError, ValueError):
                pass
            else:
                if code.startswith('4') or code.startswith('5'):
                    # This is an error response.
                    # If generated by DRF, the error details won't be wrapped
                    # in a top-level 'errors' member. Ensure it is wrapped so
                    # that it complies with jsonapi.org.
                    if 'errors' not in data:
                        # Also ensure we have a list of errors.
                        if not isinstance(data, collections_abc.Sequence):
                            data = [data]
                        data = {'errors': data}

        return super(JSONAPIRenderer, self).render(
            data, accepted_media_type=accepted_media_type,
            renderer_context=renderer_context)
