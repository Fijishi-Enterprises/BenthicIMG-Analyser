# To see requirements for an installed package, use: pip show <package-name>


# Assist gradual migration from Python 2 to 3.
#
# An alternative is the 'future' package, but its methods
# seem to be less well recognized by Python IDEs, at least PyCharm
# (https://youtrack.jetbrains.com/issue/PY-15538).
# Nevertheless, future's cheat sheet is useful:
# http://python-future.org/compatible_idioms.html
six==1.10.0

Django>=1.11.23,<2

# Per-object permissions
# e.g. "can edit this source" not just "can edit sources"
# Requires: django, six
django-guardian==1.4.9

# Python Imaging Library
# (A currently active, package friendly fork of it; also endorsed by Django)
Pillow==4.1.1

# System for generating smaller versions of images.
# Requires: django, Pillow
easy-thumbnails==2.5.0

# Add email activation to user registration process;
# unlike in userena, this is implemented without additional models.
django-registration==2.4.1

# Versioning of database objects. Requires django.
django-reversion==2.0.13

# Allow Django to connect to a PostgreSQL database.
# See here for versions Django supports:
# https://docs.djangoproject.com/en/dev/ref/databases/#postgresql-notes
psycopg2==2.6.2

# Amazon Web Services SDK for Python
# There's a newer package called boto3, but the interface is completely
# different, and django-storages doesn't support that yet
boto==2.40.0

# Nicer interface for AWS S3 compared to using boto alone; also supports
# many other storage systems.
# Even if a dev machine doesn't use S3, we still want this installed to make
# module imports work.
# Requires: boto
django-storages==1.6.5

# Writing tests for database migrations.
django-migration-testcase==0.0.14

# Python 2's CSV module has poor support for Unicode and multiplatform
# newline chars. This backport of Python 3's CSV module is less painful to
# work with, even in a Python 2 system.
# Usage: `from backports import csv`
# This package should also work for Python 3, so no conditional imports should
# be needed. But after moving to Python-3-only, it would be best to simplify to
# `import csv`.
backports.csv==1.0.6

# HTML parsing.
# Also comes with a character encoding detection tool called "Unicode, Dammit":
# https://www.crummy.com/software/BeautifulSoup/bs4/doc/#unicode-dammit
beautifulsoup4==4.6.0

# BeautifulSoup's encoding detection becomes more accurate if chardet or
# cchardet is installed. chardet is older; cchardet is much faster.
cchardet==2.1.4

# Fancy math
numpy==1.11.1

# Library for testing; can replace parts of the system under test with
# mock objects.
# Can be replaced with Python standard library's mock from Python 3.3 onward.
mock==2.0.0

# More elegant filepath calculations compared to os.path.
# pathlib has become part of the Python 3 standard library. pathlib2, an
# unofficial backport of pathlib to Python 2, is the best bet for migrating
# cleanly and idiomatically to Python 3.
# However, pathlib2 does have a major flaw: paths with non-ASCII characters
# are not supported. The only way to support that is to move to Python 3
# eventually. https://github.com/mcmtroffaes/pathlib2/issues/34
pathlib2==2.3.0
# unipath hasn't been updated since early 2015 (as of late 2017).
# Was formerly recommended by Two Scoops of Django, but they moved to pathlib.
# https://github.com/twoscoops/two-scoops-of-django-1.8/issues/150
unipath==1.1

# Machine Learning tools.
# scikit-learn has no Python 3.6 support yet (as of scikit-learn 0.18.1).
scipy==0.18.1
scikit-learn==0.17.1

# Browser-side testing.
# Also requires installing drivers for specific browsers, and putting the
# drivers on your PATH:
# https://selenium-python.readthedocs.io/installation.html#drivers
selenium==3.141.0

# Async job tools
amqp==1.4.9
anyjson==0.3.3
billiard==3.3.0.23
celery==3.1.23
kombu==3.0.35
redis==2.10.5

# Supervisord to manage celery.
# supervisor has no Python 3.x support yet (as of supervisor 3.3.1);
# it's planned for supervisor 4.0.
supervisor==3.3.1

# Progress bar for CLI
tqdm==4.32.2
