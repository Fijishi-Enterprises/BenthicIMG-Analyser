# -*- coding: utf-8 -*-
# Generated by Django and then heavily manually edited, because Django's
# squash did very little to reduce the operation count on its own.
from __future__ import unicode_literals

from django.conf import settings
from django.core.management.sql import emit_post_migrate_signal
from django.db import migrations, models
import django.db.models.deletion
import easy_thumbnails.fields
import labels.models


def create_labelset_committee_user_group(
        apps, schema_editor, with_create_permissions=True):
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')

    group = Group(name="Labelset Committee")
    group.save()

    perms = []
    perm_codes = ['change_label', 'verify_label']
    for perm_code in perm_codes:
        try:
            perm = Permission.objects.get(
                codename=perm_code, content_type__app_label='labels')
        except Permission.DoesNotExist:
            # If this is the first round of migrations ever run since the
            # relevant permissions and content types were defined
            # (e.g. in unit tests), then permissions and content types
            # will have to be created.
            # They're normally created as part of the post-migration signal.
            # We will trigger this signal manually to create the perms/ctypes.
            # https://code.djangoproject.com/ticket/23422#comment:20

            # This function may or may not be private API, and thus its
            # behavior or signature may change without notice.
            emit_post_migrate_signal(0, False, 'default')

            # Try getting the perm again
            perm = Permission.objects.get(
                codename=perm_code, content_type__app_label='labels')
        perms.append(perm)

    group.permissions.add(*perms)


def delete_labelset_committee_user_group(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    group = Group.objects.get(name="Labelset Committee")
    group.delete()


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LabelGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=45)),
                ('code', models.CharField(blank=True, max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('default_code', models.CharField(max_length=10, verbose_name='Default Short Code')),
                ('description', models.TextField(null=True)),
                ('thumbnail', easy_thumbnails.fields.ThumbnailerImageField(help_text="For best results, please use an image that's close to 150 x 150 pixels. Otherwise, we'll resize and crop your image to make sure it's that size.", null=True, upload_to=labels.models.get_label_thumbnail_upload_path, verbose_name='Example image (thumbnail)')),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='labels.LabelGroup', verbose_name='Functional Group')),
                ('verified', models.BooleanField(default=False)),
                ('duplicate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='labels.Label')),
            ],
            options={'permissions': (('verify_label', 'Can change verified field'),)},
        ),
        migrations.CreateModel(
            name='LabelSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True)),
                ('location', models.CharField(blank=True, max_length=45)),
                ('edit_date', models.DateTimeField(auto_now=True, verbose_name='Date edited')),
            ],
        ),
        migrations.CreateModel(
            name='LocalLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, verbose_name='Short Code')),
                ('global_label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='labels.Label')),
                ('labelset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='labels.LabelSet')),
            ],
        ),
        migrations.RunPython(
            code=create_labelset_committee_user_group,
            reverse_code=delete_labelset_committee_user_group,
        ),
    ]
