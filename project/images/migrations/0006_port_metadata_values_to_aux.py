# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-06-07 04:42
from __future__ import unicode_literals

from django.db import migrations


def values_to_aux(apps, schema_editor):
    """
    For every Metadata object, transfer the value of value1 to aux1,
    value2 to aux2, etc.
    """
    Metadata = apps.get_model('images', 'Metadata')
    metadatas = Metadata.objects.all()
    metadatas.select_related('value1', 'value2', 'value3', 'value4', 'value5')
    metadata_count = metadatas.count()

    for num, metadata in enumerate(metadatas, 1):
        metadata.aux1 = metadata.value1.name if metadata.value1 else ''
        metadata.aux2 = metadata.value2.name if metadata.value2 else ''
        metadata.aux3 = metadata.value3.name if metadata.value3 else ''
        metadata.aux4 = metadata.value4.name if metadata.value4 else ''
        metadata.aux5 = metadata.value5.name if metadata.value5 else ''
        metadata.save()

        # Give progress updates every so often.
        if num % 10000 == 0:
            print("Updated {num} of {count} Metadata objects...".format(
                num=num, count=metadata_count))


def aux_to_values(apps, schema_editor):
    """
    For every Metadata object, transfer the value of aux1 to value1,
    aux2 to value2, etc.
    """
    Metadata = apps.get_model('images', 'Metadata')
    Value1 = apps.get_model('images', 'Value1')
    Value2 = apps.get_model('images', 'Value2')
    Value3 = apps.get_model('images', 'Value3')
    Value4 = apps.get_model('images', 'Value4')
    Value5 = apps.get_model('images', 'Value5')
    metadatas = Metadata.objects.all()
    metadatas.select_related('value1', 'value2', 'value3', 'value4', 'value5')
    metadata_count = metadatas.count()

    for num, metadata in enumerate(metadatas, 1):
        metadata.value1 = Value1.objects.get_or_create(name=metadata.aux1) \
            if metadata.aux1 else None
        metadata.value2 = Value2.objects.get_or_create(name=metadata.aux2) \
            if metadata.aux2 else None
        metadata.value3 = Value3.objects.get_or_create(name=metadata.aux3) \
            if metadata.aux3 else None
        metadata.value4 = Value4.objects.get_or_create(name=metadata.aux4) \
            if metadata.aux4 else None
        metadata.value5 = Value5.objects.get_or_create(name=metadata.aux5) \
            if metadata.aux5 else None
        metadata.save()

        # Give progress updates every so often.
        if num % 10000 == 0:
            print("Updated {num} of {count} Metadata objects...".format(
                num=num, count=metadata_count))


class Migration(migrations.Migration):

    dependencies = [
        ('images', '0005_add_metadata_aux_charfields'),
    ]

    operations = [
        migrations.RunPython(
            values_to_aux, aux_to_values, elidable=True),
    ]
